(XLISP::CHECK-FSL-VERSION 1 3)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CANONICALIZE-NAME #K(#(80 2 3 0 1 2 1 23 3 5 1 1 21 0 1 2 5 23 4 5 2 4 1 23 4 5 2 3 5 23 5 5 1 5 25 6 0 2 5 2 11 0 1) #(0 17 40) #("USER" #\Space #\Tab STRINGP REMOVE NSTRING-UPCASE INTERN) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(80 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #("Coerce name to a symbol -- if it's a string, spaces and tabs are
  removed and it is converted to all upper case before interning symbol." FUNCTION-DOCUMENTATION CANONICALIZE-NAME %SET-GET) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(CANONICALIZE-NAME) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(LIST2TABLE #K(#(80 2 0 5 23 0 2 0 0 1 3 16 3 4 21 1 1 2 3 16 4 5 17 4 6 23 1 0 3 5 2 6 17 3 3 16 3 4 21 1 1 2 3 11 0 2) #(0 19 43) #(MAKE-HASH-TABLE %SET-GETHASH) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(LIST2TABLE) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(TABLE2LIST #K(#(80 2 1 0 2 34 2 3 51 1 4 1 3 23 1 0 2 4 1 35 3 3 11 0 3 80 4 0 2 20 2 3 4 35 1 5 20 4 5 4 36 1 4 0 57 0) #(0 25) #(NIL MAPHASH) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(TABLE2LIST) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(PARSE-RGB.TXT #K(#(77 1 1 1 3 3 0 1 2 10 0 1 5 23 4 5 1 5 21 0 1 10 5 23 5 5 1 5 56 5 2 6 6 57 0 21 0 3 4 5 25 6 6 1 5 11 6 4 23 7 7 2 5 4 0 4 8 21 0 6 9 7 0 7 9 21 0 7 8 9 23 8 10 3 7 3 4 23 9 11 1 10 2 47 11 2 11 23 9 12 1 10 2 47 12 2 12 23 9 13 1 10 2 47 13 2 13 23 7 14 1 10 23 10 14 1 14 23 11 10 4 14 11 12 13 20 10 8 8 23 7 7 2 5 4 21 0 6 9 7 38 12 9 39 13 10 25 14 6 3 8 9 10 11 0 4) #(0 23 35 40 45 48 62 70 129 140 153) #(255.0 0 NIL #("rgb.txt") PROBE-FILE OPEN CLOSE READ-LINE MAKE-STRING-INPUT-STREAM READ CANONICALIZE-NAME LIST :TEST EQUAL REMOVE-DUPLICATES) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(PARSE-RGB.TXT) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(PARSE-COLOR #K(#(80 2 0 2 23 0 2 1 1 21 0 1 2 2 23 1 2 1 1 1 3 0 1 2 38 2 3 25 3 0 2 2 3) #(0 14 21 24) #(STRINGP CANONICALIZE-NAME *COLORTABLE* GETHASH) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(PARSE-COLOR) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 2 0 1 0 25 2 0 2 2 1) #(0) #("XLISP" MAKE-COLOR UNEXPORT) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MAKE-COLOR #K(#(80 5 0 3 23 0 5 1 1 23 1 0 4 5 2 3 4 38 2 6 23 3 7 3 2 3 4 23 4 0 3 5 6 7 11 0 5) #(0) #(CANONICALIZE-NAME XLISP::MAKE-COLOR *COLORTABLE* LIST %SET-GETHASH) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(MAKE-COLOR) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(ADD-COLOR #K(#(80 2 0 3 23 0 2 1 1 23 1 3 1 2 39 2 4 25 3 0 3 4 2 3) #(0) #(CANONICALIZE-NAME PARSE-COLOR MAKE-COLOR APPLY) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(ADD-COLOR) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((%SET-SYMBOL-FUNCTION (QUOTE LOAD-COLORTABLE) (FUNCTION (LAMBDA (&OPTIONAL (PATH "rgb.txt")) (BLOCK LOAD-COLORTABLE (SETF PATH (PROBE-FILE PATH)) (WHEN (NULL PATH) (MESSAGE-DIALOG "Where is rgb.txt?") (SETF PATH (OPEN-FILE-DIALOG)) (IF (NULL PATH) (RETURN) (SETF PATH (PROBE-FILE PATH)))) (WHEN PATH (SETF *COLORTABLE* (LIST2TABLE (PARSE-RGB.TXT PATH))) (PROGN (SETF (GETHASH (QUOTE GREEN) *COLORTABLE*) (LIST 0.0 0.6 0.0)) (MAKE-COLOR (QUOTE GREENGREEN) 0.0 1.0 0.0)) *COLORTABLE*))))) EVAL) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(LOAD-COLORTABLE) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #("parscolr" PROVIDE) 0 NIL)
