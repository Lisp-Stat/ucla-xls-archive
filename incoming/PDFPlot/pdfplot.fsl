(XLISP::CHECK-FSL-VERSION 1 3)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #("basicplt" REQUIRE) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #("pdfplot" PROVIDE) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #("parscolr" REQUIRE) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 1 2 21 0 1 2 3 11 0 1 51 3 3 0 23 3 0 2 2 3 11 0 2 80 2 4 4 5 6 7 0 60 1 5 6 5 4 25 8 0 3 4 4 4 25 8 0 3 3 3 3 25 8 0 3 2 2 2) #(0 16 19 32 46 53 60) #(NIL PARSE-COLOR FBOUNDP %SET-SYMBOL-FUNCTION 0 1 0.5 #(BLACK WHITE) LIST) 0 NIL)
#K(#(80 1 3 0 1 2 4 38 3 4 39 4 5 23 5 6 1 4 21 0 1 2 6 0 4 6 1 3 23 6 6 1 4 23 7 4 2 5 6 0 3 5 16 5 6 21 1 4 5 5 38 8 7 23 9 0 3 4 7 6 17 5 5 16 5 6 21 1 4 5 5 38 10 7 23 9 0 4 4 7 2 1 23 11 0 2 2 4 11 0 2) #(0 23 28 33 50 71) #((OUTPUT) PDF-PLOT NIL BASIC-PLOT-PROTO MAKE-OBJECT LISTP LIST APPLY :ADD-SLOT SEND :MAKE-PROTOTYPE SET) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :LINE-WIDTH #K(#(77 1 2 1 3 3 0 1 2 3 64 2 6 21 2 1 2 2 0 2 7 1 3 0 5 7 21 0 4 5 6 62 4 8 23 4 0 3 8 3 7 23 5 0 1 7 25 5 0 0) #(0 18 23 26 31 46) #(" ~d w " OUTPUT NIL #(%NOT-SUPPLIED) FORMAT CALL-NEXT-METHOD) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:LINE-WIDTH) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :LINE-TYPE #K(#(77 1 2 1 5 5 0 1 2 3 4 3 64 2 8 21 2 1 2 2 0 2 9 1 3 0 7 9 21 0 4 7 8 50 0 5 6 9 6 62 5 10 23 6 0 2 10 3 1 7 62 5 10 23 6 0 2 10 4 25 7 0 0) #(0 20 25 28 33 39 50 59) #(" [ 3 5 ] 0 d " " [ ] 0 d " OUTPUT DASHED NIL #(%NOT-SUPPLIED) FORMAT CALL-NEXT-METHOD) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:LINE-TYPE) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :DRAW-COLOR #K(#(77 1 2 1 3 3 0 1 2 5 64 2 6 21 2 1 2 2 0 2 7 1 3 0 5 7 21 0 4 6 6 21 0 5 6 7 23 4 0 1 7 62 4 8 23 5 9 1 7 23 5 10 1 7 23 6 0 4 8 3 9 10 25 4 0 0) #(0 18 23 26 31 36 62) #("~{ ~f ~} RG ~{ ~f ~} rg " OUTPUT NIL #(%NOT-SUPPLIED) CALL-NEXT-METHOD PARSE-COLOR FORMAT) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:DRAW-COLOR) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :DRAW-LINE #K(#(80 6 2 0 1 1 23 2 0 4 2 3 4 5 62 7 8 25 3 0 6 8 6 2 3 4 5) #(0) #("~d ~d m ~d ~d l S ~%" OUTPUT CALL-NEXT-METHOD FORMAT) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:DRAW-LINE) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :DRAW-SYMBOL #K(#(80 6 4 0 1 2 3 2 23 4 0 4 2 3 4 5 62 9 10 21 0 1 2 3 0 6 11 1 3 0 7 11 25 5 0 7 10 8 4 5 4 5 11) #(0 24 29 32) #("f" "S" " ~d ~d m ~d ~d 3 3 re ~A ~%" OUTPUT CALL-NEXT-METHOD FORMAT) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:DRAW-SYMBOL) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :DRAW-STRING #K(#(80 5 2 0 1 2 23 2 0 3 2 3 4 62 6 7 61 45 4 8 25 3 0 5 7 5 3 8 2) #(0) #("BT 1 0 0 -1 0 0 Tm ~d ~d Td (~A) Tj ET~%" OUTPUT CALL-NEXT-METHOD FORMAT) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:DRAW-STRING) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :DRAW-STRING-UP #K(#(80 5 2 0 1 3 23 2 0 3 2 3 4 62 6 7 61 45 4 8 61 45 3 9 25 3 0 5 7 5 8 9 2) #(0) #("BT 0 -1 -1 0 0 0 Tm ~d ~d Td (~A) Tj ET~%" OUTPUT CALL-NEXT-METHOD FORMAT) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:DRAW-STRING-UP) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :DRAW-TEXT #K(#(80 7 3 0 1 2 3 0 4 10 0 3 11 37 61 1 2 5 9 38 3 12 23 4 12 3 1 12 2 2 47 12 7 12 23 5 12 1 12 2 45 11 12 11 1 4 37 61 3 4 5 7 38 3 12 23 4 12 3 1 12 2 2 45 11 12 11 37 61 5 6 6 9 38 6 12 23 4 12 2 1 12 2 43 10 12 10 38 7 12 25 4 0 5 1 12 2 11 10) #(0 19 46 52 67 73 87) #(2 NIL 1 :TEXT-WIDTH SEND FLOOR :TEXT-ASCENT :DRAW-STRING) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:DRAW-TEXT) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :DRAW-TEXT-UP #K(#(80 7 3 0 1 2 3 0 3 10 0 4 11 37 61 1 2 5 9 38 3 12 23 4 12 3 1 12 2 2 47 12 7 12 23 5 12 1 12 2 43 11 12 11 38 6 12 23 4 12 2 1 12 2 43 10 12 10 38 7 12 25 4 0 5 1 12 2 10 11) #(0 19 44) #(2 NIL 1 :TEXT-WIDTH SEND FLOOR :TEXT-ASCENT :DRAW-STRING-UP) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:DRAW-TEXT-UP) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :PAINT-RECT #K(#(80 6 2 0 1 1 23 2 0 4 2 3 4 5 62 7 8 25 3 0 6 8 6 2 3 4 5) #(0) #("
 ~d ~d ~d ~d re f
" OUTPUT CALL-NEXT-METHOD FORMAT) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:PAINT-RECT) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :MAKE-POLY #K(#(77 1 3 1 4 4 0 1 2 3 5 62 7 8 71 2 3 2 9 16 2 10 71 2 2 10 10 23 5 0 4 8 6 9 10 0 2 9 16 9 10 21 1 1 2 9 16 10 11 71 2 2 10 12 23 5 0 4 8 4 11 12 17 9 9 16 9 10 21 1 1 2 9 11 0 5) #(0 46 73) #(" ~d ~d l " NIL " n ~d ~d m " OUTPUT #(T) FORMAT) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:MAKE-POLY) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :FRAME-POLY #K(#(77 1 3 1 2 2 0 1 1 23 3 0 2 2 3 38 4 6 23 5 0 4 1 6 2 3 62 5 6 25 6 0 2 6 4) #(0) #(" S ~%" OUTPUT #(T) CALL-NEXT-METHOD :MAKE-POLY SEND FORMAT) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:FRAME-POLY) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :PAINT-POLY #K(#(77 1 3 1 2 2 0 1 1 23 3 0 2 2 3 38 4 6 23 5 0 4 1 6 2 3 62 5 6 25 6 0 2 6 4) #(0) #(" f ~%" OUTPUT #(T) CALL-NEXT-METHOD :MAKE-POLY SEND FORMAT) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:PAINT-POLY) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :DRAW-DATA-LINES #K(#(80 6 2 0 1 1 62 7 8 23 2 0 2 8 6 25 3 0 4 2 3 4 5) #(0) #("
%% :DRAW-DATA-LINES
" OUTPUT FORMAT CALL-NEXT-METHOD) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:DRAW-DATA-LINES) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :DRAW-DATA-POINTS #K(#(80 6 2 0 1 1 62 7 8 23 2 0 2 8 6 25 3 0 4 2 3 4 5) #(0) #("
%% :DRAW-DATA-POINTS
" OUTPUT FORMAT CALL-NEXT-METHOD) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:DRAW-DATA-POINTS) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :REDRAW-BACKGROUND #K(#(80 2 2 0 1 1 62 3 4 23 2 0 2 4 2 25 3 0 0) #(0) #("
%% :REDRAW-BACKGROUND
" OUTPUT FORMAT CALL-NEXT-METHOD) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:REDRAW-BACKGROUND) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :REDRAW-AXIS #K(#(80 2 2 0 1 1 62 3 4 23 2 0 2 4 2 25 3 0 0) #(0) #("
%% :REDRAW-AXIS
" OUTPUT FORMAT CALL-NEXT-METHOD) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:REDRAW-AXIS) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 3 0 1 2 2 38 3 4 23 4 5 1 3 25 5 0 4 4 2 5 1) #(0) #(NIL :REDRAW-CONTENT #K(#(80 2 2 0 1 1 62 3 4 23 2 0 2 4 2 25 3 0 0) #(0) #("
%% :REDRAW-CONTENT
" OUTPUT FORMAT CALL-NEXT-METHOD) 0 NIL) PDF-PLOT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(:REDRAW-CONTENT) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 49 1 1 0 57 0) #(0) #("%PDF-1.0
% Graphics output produced by xlispstat & pdfplot.lsp
" PDF-HEADER) 0 NIL)
#K(#(80 1 7 0 1 2 3 4 5 6 1 23 7 8 7 7 6 5 4 3 2 1 49 8 8 0 57 0) #(0) #("7 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources << /Font << /F1 5 0 R   /F2 6 0 R  >>   /ProcSet 4 0 R >>
/MediaBox [ ~d ~d ~d ~d ]
/Contents 8 0 R
>>
endobj
" "6 0 obj
<< 
/Type /Font 
/Subtype /Type1
/Name /F2
/BaseFont /ZapfDingbats
/Encoding /MacRomanEncoding
>>
endobj
" "5 0 obj
<< 
/Type /Font 
/Subtype /Type1
/Name /F1
/BaseFont /Helvetica
/Encoding /MacRomanEncoding
>>
endobj
" "4 0 obj
[
/PDF /Text
]
endobj
" "3 0 obj
<<
/Type /Pages
/Count 1
/Kids [ 7 0 R ]
>>
endobj
" "2 0 obj
<<
/Type /Outlines
/Count 0
>>
endobj
" "1 0 obj
<<
/Type /Catalog
/Pages 3 0 R
/Outlines 2 0 R
>>
endobj
" LIST PDF-OBJECTS) 0 NIL)
#K(#(80 1 2 0 1 1 23 2 3 2 2 1 49 3 3 0 57 0) #(0) #("9 0 obj
 ~d 
endobj
" "8 0 obj
<< /Length 9 0 R >>
stream
%
BT
/F1 10 Tf
ET
%
% Begin Lisp graphics output
%
~A
%
% End Lisp graphics output 
%
endstream
endobj
" LIST PDF-STREAM) 0 NIL)
#K(#(80 1 1 0 0 49 1 1 0 57 0) #(0) #("xref
0 10
0000000000 65535 f
~10,48d 00000 n
~10,48d 00000 n
~10,48d 00000 n
~10,48d 00000 n
~10,48d 00000 n
~10,48d 00000 n
~10,48d 00000 n
~10,48d 00000 n
~10,48d 00000 n
trailer
<<
/Size 11
/Root 1 0 R
>>
startxref
~d
%%EOF
" PDF-TRAILER-TEMPLATE) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(WRITE-PDF #K(#(80 3 3 0 1 2 9 38 3 6 38 4 7 23 5 6 3 2 6 7 56 4 1 7 7 57 0 21 0 2 3 6 25 6 7 1 6 11 7 5 38 7 8 23 8 8 2 1 8 71 2 0 8 8 0 5 9 38 9 10 23 10 0 3 6 4 10 23 11 10 1 6 20 10 9 9 38 12 10 23 13 10 1 10 16 10 11 21 1 5 6 10 23 10 0 3 6 4 11 23 11 12 1 6 20 12 9 9 17 10 10 16 10 11 21 1 5 6 10 38 12 12 23 14 12 1 12 16 12 12 16 8 13 71 2 2 8 14 23 10 0 6 6 12 3 3 13 14 23 11 12 1 6 20 12 9 9 23 15 12 1 1 38 16 13 16 13 13 23 10 0 3 6 13 12 23 11 13 1 6 20 13 9 9 38 16 13 71 2 2 13 13 23 17 14 1 12 23 10 0 3 6 13 14 23 11 12 1 6 20 12 9 9 39 10 12 38 18 13 23 19 14 1 9 25 20 7 4 12 6 13 14) #(0 27 32 37 40 92 119) #(0 "~A" NIL :DIRECTION :OUTPUT OPEN CLOSE :VIEW-RECT SEND PDF-HEADER FORMAT FILE-LENGTH PDF-OBJECTS BUTLAST LAST MAKE-PDF-STRING PDF-STREAM LENGTH PDF-TRAILER-TEMPLATE REVERSE APPLY) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(WRITE-PDF) 0 NIL)) EVAL) 0 NIL)
#K(#(80 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(80 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MAKE-PDF-STRING #K(#(77 1 2 1 6 6 0 1 2 3 4 5 9 64 2 9 21 2 1 2 2 0 2 10 1 3 0 3 10 38 7 11 38 8 12 23 9 11 2 11 12 16 11 12 21 1 4 5 11 38 10 13 38 7 14 38 11 15 23 9 14 3 14 15 12 23 9 0 4 1 13 12 14 17 11 11 16 11 12 21 1 4 5 11 21 0 7 6 9 23 12 10 0 38 13 13 23 9 0 4 1 13 8 10 38 14 13 23 9 13 2 1 13 71 2 2 13 13 23 15 0 3 10 7 13 38 16 13 23 9 0 2 1 13 38 7 13 38 8 14 23 9 13 2 13 14 16 13 14 21 1 8 9 13 38 17 15 23 9 0 3 1 15 14 17 13 13 16 13 14 21 1 8 9 13 38 14 15 23 9 15 2 1 15 71 2 2 15 15 38 14 16 23 9 16 2 1 16 71 2 2 16 16 2 45 16 6 16 38 18 17 23 9 17 2 1 17 23 15 0 6 10 5 15 16 17 4 21 0 10 11 9 11 0 10 25 19 0 1 10) #(0 21 26 29 49 84 89 93 154 175 232 235) #(NIL "produced by XLS pdfplot.lsp" "%
%
 BT 1 0 0 -1 0 ~d Tm 10 ~d Td (~A ~A) Tj ET ~%" 10 "1 0 0 -1 0 ~d cm ~%" OUTPUT #(%NOT-SUPPLIED) PDF-PLOT :OWN-METHODS SEND :ADD-METHOD :GET-METHOD MAKE-STRING-OUTPUT-STREAM :ADD-SLOT :SIZE FORMAT :REDRAW :DELETE-METHOD :TITLE GET-OUTPUT-STREAM-STRING) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(80 1 1 0 0 11 0 1) #(0) #(MAKE-PDF-STRING) 0 NIL)) EVAL) 0 NIL)
