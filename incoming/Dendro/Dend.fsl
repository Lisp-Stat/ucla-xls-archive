#K(#(77 0 1 3 0 1 2 4 38 3 4 39 4 5 23 5 6 1 4 21 0 1 2 6 0 4 6 1 3 23 6 6 1 4 23 7 4 2 5 6 0 3 5 16 5 6 1 5 38 8 7 23 9 0 3 4 7 6 17 5 5 16 5 6 21 1 4 6 5 38 10 7 23 9 0 4 4 7 2 1 23 11 0 2 2 4 11 0 2) #(0 24 29 34 48 64 69) #((DATA PRXMAT LINKAGE DENDRO-LIST SYMBOL PROXIMITY DISTANCE LABEL DENDRO-SEQ DRAW-LABEL?) DENDRO NIL GRAPH-PROTO MAKE-OBJECT LISTP LIST APPLY :ADD-SLOT SEND :MAKE-PROTOTYPE SET) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 1 2 1 2 2 0 1 0 21 0 1 2 2 63 4 2 0 62 4 0 57 0) #(0 14 18) #(NIL DATA #(NIL)) 0 NIL) DENDRO :DATA BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #("Proximity matrix" #K(#(77 1 2 1 2 2 0 1 0 21 0 1 2 2 63 4 2 0 62 4 0 57 0) #(0 14 18) #(NIL PRXMAT #(NIL)) 0 NIL) DENDRO :PRXMAT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #("Linkage method" #K(#(77 1 2 1 2 2 0 1 0 21 0 1 2 2 63 4 2 0 62 4 0 57 0) #(0 14 18) #(NIL LINKAGE #(NIL)) 0 NIL) DENDRO :LINKAGE BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 1 2 1 2 2 0 1 0 21 0 1 2 2 63 4 2 0 62 4 0 57 0) #(0 14 18) #(NIL DENDRO-LIST #(NIL)) 0 NIL) DENDRO :DENDRO-LIST BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 1 2 1 2 2 0 1 0 21 0 1 2 2 63 4 2 0 62 4 0 57 0) #(0 14 18) #(NIL LABEL #(NIL)) 0 NIL) DENDRO :LABELS BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 1 2 1 2 2 0 1 0 21 0 1 2 2 63 4 2 0 62 4 0 57 0) #(0 14 18) #(NIL DISTANCE #(NIL)) 0 NIL) DENDRO :DISTANCE BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 1 2 1 2 2 0 1 0 21 0 1 2 2 63 4 2 0 62 4 0 57 0) #(0 14 18) #(NIL DRAW-LABEL? #(NIL)) 0 NIL) DENDRO :DRAW-LABEL? BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 1 2 1 2 2 0 1 0 21 0 1 2 2 63 4 2 0 62 4 0 57 0) #(0 14 18) #(NIL DENDRO-SEQ #(NIL)) 0 NIL) DENDRO :DENDRO-SEQ BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 1 0 3 38 1 3 23 2 3 3 1 3 2 38 3 4 23 2 4 2 1 4 38 4 5 23 2 5 2 1 5 25 5 0 3 3 4 5) #(0) #("1" :TEXT-WIDTH SEND :TEXT-ASCENT :TEXT-DESCENT LIST) 0 NIL) DENDRO :TEXT BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 3 1 0 2 38 1 4 23 2 4 2 1 4 51 1 4 1 4 23 3 4 2 4 2 38 4 5 25 2 0 4 1 5 3 4 77 0 3 0 0 25 5 0 2 1 2) #(0 37) #(SYMBOL :LABELS SEND MAPCAR :SLOT-VALUE SELECT) 0 NIL) DENDRO :SYMBOL BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 1 0 7 38 1 3 23 2 3 2 1 3 23 3 3 1 3 39 4 4 23 5 4 2 4 3 23 6 4 1 4 23 7 4 2 3 4 39 8 5 23 5 5 2 5 3 23 6 5 1 5 23 7 5 2 3 5 23 9 6 1 5 23 10 7 1 5 23 11 8 1 7 23 12 0 1 4 2 47 8 2 8 23 11 0 1 8 38 13 8 23 14 9 2 6 7 23 2 0 3 1 8 9 38 15 5 25 2 0 3 1 5 4) #(0) #(4 :DENDRO-LIST SEND COMBINE INTEGERP MAPCAR WHICH SELECT FLOATP MIN MAX ROUND LENGTH :DISTANCE LIST :SYMBOL) 0 NIL) DENDRO :SET-DISTANCE&SYMBOL BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 6 0 1 2 3 4 5 7 38 6 8 23 7 8 2 1 8 16 8 9 71 2 2 8 10 71 3 4 8 11 2 43 10 11 10 38 8 11 23 7 11 2 1 11 71 2 2 11 11 23 9 11 3 7 6 11 23 10 11 1 11 2 43 11 5 11 2 42 9 11 11 2 42 11 4 12 23 11 12 1 12 2 42 10 3 13 23 11 13 1 13 2 42 10 2 14 25 12 0 4 11 13 12 14) #(0) #(5 2.5 0.5 6 "~,2f" NIL :TEXT SEND :DISTANCE FORMAT LENGTH FLOOR LIST) 0 NIL) DENDRO :SET-MARGIN BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 3 0 1 2 5 38 3 5 23 4 5 2 1 5 16 5 0 71 2 2 5 5 38 5 6 23 4 6 2 1 6 23 6 6 1 6 38 7 7 61 112 6 8 38 8 9 23 4 0 7 1 7 4 4 8 9 3 38 7 6 38 8 7 25 4 0 7 1 6 2 4 5 7 3) #(0) #(1 NIL 0 :DISTANCE SEND :LABELS LENGTH :RANGE :DRAW) 0 NIL) DENDRO :ORIGIN-RANGE BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 6 0 1 2 3 4 5 16 38 6 8 23 7 8 2 1 8 23 8 8 1 8 38 9 9 23 7 9 2 1 9 16 9 0 71 2 2 9 9 38 10 10 23 7 10 2 1 10 48 7 10 11 48 6 10 12 48 5 10 13 48 4 10 14 38 11 15 23 7 15 2 1 15 71 2 2 15 15 38 12 16 23 7 16 4 1 16 11 7 16 16 16 38 12 17 23 7 17 4 1 17 13 7 16 17 17 38 12 18 2 45 9 12 19 23 7 18 4 1 18 7 19 71 2 2 18 18 38 12 19 2 45 9 14 20 23 7 19 4 1 19 7 20 71 2 2 19 19 38 13 20 2 42 16 3 21 23 14 22 3 8 6 17 38 15 23 23 7 0 7 1 20 7 21 22 23 2 38 13 20 2 42 19 3 21 2 43 15 18 22 38 15 23 25 7 0 7 1 20 6 21 22 23 2) #(0) #(NIL -1 3 2 1 0 :LABELS SEND LENGTH :SIZE :SET-MARGIN :DISTANCE :CANVAS-TO-SCALED :RANGE + :DRAW) 0 NIL) DENDRO :RESET-RANGE BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 5 0 1 2 3 4 22 38 5 7 23 6 7 2 1 7 16 7 8 71 2 2 7 9 2 45 9 8 10 2 47 10 6 10 38 7 11 23 6 11 2 1 11 16 11 11 38 8 12 23 6 12 4 1 12 5 5 38 8 13 23 6 13 4 1 13 5 8 38 8 14 23 6 14 4 1 14 5 10 38 8 15 23 6 15 4 1 15 5 9 16 12 16 71 2 2 12 17 71 2 2 13 18 71 2 2 14 19 71 2 2 15 20 23 9 21 4 17 18 19 20 2 43 8 10 22 23 9 22 4 5 8 22 9 51 4 23 0 23 10 22 2 23 22 38 11 23 23 6 0 6 1 23 16 17 16 20 0 5 23 1 2 48 23 21 24 48 23 22 25 38 11 26 2 45 16 6 27 2 43 16 6 28 23 6 0 6 1 26 27 24 28 24 38 12 26 2 45 16 11 27 2 43 24 2 28 23 6 0 7 1 26 25 27 28 6 5 61 112 23 23 37 60 1 3 23 4 11 0 3 77 0 2 2 13 1 0 25 14 0 3 3 2 1) #(0 165 224 230 233) #(8 NIL 4 0 2 :DISTANCE SEND :TEXT :SCALED-TO-CANVAS LIST MAPCAR :DRAW-LINE :DRAW-TEXT "~,2f" FORMAT) 0 NIL) DENDRO :DRAW-DENDRO-AXIS BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 5 0 1 2 3 4 17 62 6 7 23 5 8 1 7 38 6 9 23 7 9 2 1 9 16 9 10 71 2 2 9 11 71 3 4 9 12 2 43 11 12 12 2 42 10 5 13 23 8 13 1 13 0 4 14 1 5 38 9 15 61 112 14 16 23 7 15 4 1 15 16 4 16 15 16 2 45 16 13 16 71 2 2 15 17 2 42 12 2 18 2 43 17 18 17 48 14 7 18 23 5 19 1 18 0 4 20 1 3 38 10 21 9 18 20 22 23 11 22 1 22 2 42 11 20 23 2 43 17 23 23 23 7 0 5 1 21 22 16 23 61 112 20 20 37 60 2 4 20 19 61 112 14 14 37 60 1 6 14 8 11 0 3) #(0 60 112 147 153 157 163) #(2 NIL 0 0.5 SYMBOL LENGTH :TEXT SEND FLOOR :SCALED-TO-CANVAS :DRAW-STRING STRING) 0 NIL) DENDRO :DRAW-SYM BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 3 1 0 11 16 2 4 71 2 2 2 5 71 3 4 2 6 23 1 7 1 4 23 1 8 1 5 16 7 9 16 8 10 71 2 2 7 11 71 2 2 8 12 23 2 13 4 9 9 10 10 23 2 14 4 11 6 6 12 23 2 6 2 13 14 38 3 7 38 4 8 23 5 0 5 1 7 6 8 3 38 6 6 38 4 7 23 5 0 4 1 6 7 3 23 7 6 1 4 21 0 1 4 6 23 7 6 1 5 21 0 2 3 6 11 0 3 38 8 6 25 5 0 3 1 6 5 23 7 6 1 5 21 0 5 6 6 38 8 5 25 5 0 3 1 5 4 38 8 6 23 5 0 3 1 6 4 38 8 6 25 5 0 3 1 6 5) #(0 106 116 119 129 139 149) #(NIL DECISION-XY LIST :ADD-LINES :DRAW SEND :ADJUST-TO-DATA ATOM :DRAW-DENDRO-LINES) 0 NIL) DENDRO :DRAW-DENDRO-LINES BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 1 0 2 38 1 3 23 2 0 2 1 3 38 3 3 23 2 0 2 1 3 38 4 3 23 2 0 2 1 3 38 5 3 23 2 3 2 1 3 21 0 1 2 3 38 6 4 23 2 0 2 1 4 38 7 3 25 2 0 2 1 3) #(0 47 56) #(NIL :SET-DISTANCE&SYMBOL SEND :ORIGIN-RANGE :RESET-RANGE :DRAW-LABEL? :DRAW-SYM :DRAW-DENDRO-AXIS) 0 NIL) DENDRO :DRAW-DENDRO-LABEL BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 1 0 1 38 1 3 23 2 3 2 1 3 21 0 1 2 3 23 3 0 0 38 4 3 25 2 0 2 1 3 11 0 2) #(0 20 33) #(NIL :DISTANCE SEND CALL-NEXT-METHOD :DRAW-DENDRO-LABEL) 0 NIL) DENDRO :REDRAW BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 0 2 38 0 2 23 1 2 2 1 2 23 2 2 1 2 38 3 3 25 1 0 3 1 3 2) #(0) #(:DATA SEND EUCLIDEAN-MATRIX :PRXMAT) 0 NIL) DENDRO :EUCLIDEAN BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 0 2 38 0 2 23 1 2 2 1 2 23 2 2 1 2 38 3 3 25 1 0 3 1 3 2) #(0) #(:DATA SEND STANDARDIZED-EUCLIDEAN-MATRIX :PRXMAT) 0 NIL) DENDRO :STD-EUCLIDEAN BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 0 2 38 0 2 23 1 2 2 1 2 23 2 2 1 2 38 3 3 25 1 0 3 1 3 2) #(0) #(:DATA SEND MAHALANOBIS-MATRIX :PRXMAT) 0 NIL) DENDRO :MAHALANOBIS BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 0 2 38 0 2 23 1 2 2 1 2 23 2 2 1 2 38 3 3 25 1 0 3 1 3 2) #(0) #(:DATA SEND CITYBLOCK-MATRIX :PRXMAT) 0 NIL) DENDRO :CITYBLOCK BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 0 2 38 0 2 23 1 2 2 1 2 23 2 2 1 2 38 3 3 25 1 0 3 1 3 2) #(0) #(:DATA SEND COSINE-MATRIX :PRXMAT) 0 NIL) DENDRO :COSINE BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 0 2 38 0 2 23 1 2 2 1 2 23 2 2 1 2 38 3 3 25 1 0 3 1 3 2) #(0) #(:DATA SEND CORRELATION-MATRIX :PRXMAT) 0 NIL) DENDRO :CORRELATION BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 1 2 1 9 9 0 1 2 3 4 5 6 7 8 3 21 0 1 17 2 38 10 12 23 11 12 2 1 12 23 12 13 2 2 9 21 0 2 3 13 23 13 12 1 12 1 16 23 12 14 2 2 8 21 0 4 5 14 23 14 12 1 12 1 16 23 12 14 2 2 7 21 0 6 7 14 23 15 12 1 12 1 16 23 12 14 2 2 6 21 0 8 9 14 23 16 12 1 12 1 16 23 12 14 2 2 5 21 0 10 11 14 23 17 12 1 12 1 16 23 12 14 2 2 4 21 0 12 13 14 23 18 12 1 12 1 16 23 12 14 2 2 3 21 0 14 15 14 23 19 12 1 12 1 16 0 10 12 38 20 13 23 11 0 3 1 13 12 63 11 2 0 62 11 0 57 0) #(0 21 41 48 59 66 77 84 95 102 113 120 131 138 149 156 159 173) #("correlation" "cosine" "mahalanobis" "cityblock" "sq-euclidean" "std-euclidean" "euclidean" NIL PROXIMITY #(NIL) :DATA SEND STRING-EQUAL EUCLIDEAN-MATRIX STANDARDIZED-EUCLIDEAN-MATRIX SQUARED-EUCLIDEAN-MATRIX CITYBLOCK-MATRIX MAHALANOBIS-MATRIX COSINE-MATRIX CORRELATION-MATRIX :PRXMAT) 0 NIL) DENDRO :PROXIMITY BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 2 4 0 1 2 3 3 38 4 6 23 5 6 2 1 6 38 6 7 23 5 7 2 1 7 38 7 8 23 8 6 3 7 8 6 16 6 6 23 9 6 1 6 71 2 3 6 6 23 10 7 1 6 38 11 8 23 5 0 3 1 8 7 38 12 8 23 5 0 3 1 8 6 38 13 8 23 5 0 3 1 8 7 38 14 6 23 5 0 2 1 6 38 15 6 23 5 0 6 1 6 5 4 4 4 38 16 6 25 5 0 4 1 6 3 2) #(0) #(300 400 5 10 :LINKAGE SEND :PRXMAT :TYPE AGNES LAST DENDRO-SEQ :DENDRO-SEQ :DENDRO-LIST :DRAW-DENDRO-LINES :DRAW-DENDRO-LABEL :MARGIN :SIZE) 0 NIL) DENDRO :DENDROGRAM BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DENDROGRAM #K(#(77 3 2 0 0 0 7 6 6 0 1 2 3 4 5 6 38 8 12 38 9 13 23 10 12 3 12 13 11 23 11 13 1 1 21 0 1 2 4 0 4 13 1 3 23 12 14 2 6 13 51 10 15 0 23 13 13 2 15 14 21 0 4 5 2 0 2 14 1 6 0 7 14 21 0 7 8 3 0 3 15 1 9 0 8 15 23 14 16 4 10 14 9 15 38 15 17 23 10 0 3 12 17 16 38 16 16 23 10 0 3 12 16 1 38 17 16 23 10 0 3 12 16 14 38 18 16 23 10 0 3 12 16 15 38 19 14 23 10 0 3 12 14 13 38 20 13 23 10 0 3 12 13 5 38 21 13 25 10 0 2 12 13 77 0 2 2 22 23 0 25 24 0 3 3 2 1) #(0 39 44 60 65 70 73 78 83 86 163) #(1 "single" "euclidean" " linkage and " STRING 2 (NIL NIL NIL NIL) (:LINKAGE :PROXIMITY :LABELS :DRAW) DENDRO :NEW SEND LENGTH ISEQ MAPCAR CONCATENATE :TITLE :DATA :LINKAGE :PROXIMITY :LABELS :DRAW-LABEL? :DENDROGRAM "~a" NIL FORMAT) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 3 2 0 0 0 5 4 4 0 1 2 3 5 38 6 9 23 7 9 2 1 9 21 0 1 10 9 23 8 9 1 9 21 0 3 2 4 23 9 10 2 5 9 51 11 11 0 23 10 0 2 11 10 21 0 4 5 2 38 11 9 23 7 9 3 1 9 2 1 6 38 11 9 23 7 9 2 1 9 21 0 7 8 3 38 12 10 23 7 10 3 1 10 3 1 9 38 12 10 23 7 10 2 1 10 38 13 11 23 7 0 2 1 11 38 14 11 23 15 12 4 7 9 6 10 38 16 13 23 7 13 2 1 13 25 7 0 4 1 11 12 13 25 17 0 1 8 77 0 2 2 18 19 0 25 20 0 3 3 2 1) #(0 28 38 54 59 71 80 85 97 106 143 148) #(1 " linkage and " STRING "does not exist data! You must load data." (NIL NIL NIL) (:LINKAGE :PROXIMITY :LABELS) :DATA SEND LENGTH ISEQ MAPCAR :LINKAGE :PROXIMITY :CLEAR :TITLE CONCATENATE :DENDROGRAM MESSAGE-DIALOG "Obs~a" NIL FORMAT) 0 NIL) DENDRO :LOADING-DENDRO BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 1 0 2 38 1 2 38 2 3 25 3 0 3 2 3 1) #(0) #("Dendrogram" DENDRO :MENU-TITLE SEND) 0 NIL)
#K(#(77 0 1 1 0 2 38 1 2 38 2 3 25 3 0 3 2 3 1) #(0) #((EUCLID STD-EUCLID MAHA CITYBLOCK CORR COSINE DASH AVERAGE CENTROID COMPLETE GOWER SINGLE WARD WEIGHTED DASH CLOSE ABOUT) DENDRO :MENU-TEMPLATE SEND) 0 NIL)
#K(#(77 0 1 2 0 1 3 38 2 3 38 3 4 23 4 5 1 2 25 5 0 4 3 4 5 1) #(0) #(NIL #K(#(77 0 3 17 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 4 38 17 20 23 18 20 2 2 20 21 0 1 2 20 11 0 2 60 2 19 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 11 0 18 38 17 20 38 19 21 38 20 22 51 34 23 0 25 21 0 5 20 21 17 22 23 38 17 20 38 19 21 38 20 22 51 33 23 1 1 25 21 0 5 20 21 16 22 23 38 17 20 38 19 21 38 20 22 51 32 23 1 1 25 21 0 5 20 21 15 22 23 38 17 20 38 19 21 38 20 22 51 31 23 1 1 25 21 0 5 20 21 14 22 23 38 17 20 38 19 21 38 20 22 51 30 23 1 1 25 21 0 5 20 21 13 22 23 38 17 20 38 19 21 38 20 22 51 29 23 1 1 25 21 0 5 20 21 12 22 23 38 17 20 38 19 21 38 20 22 51 28 23 1 1 25 21 0 5 20 21 11 22 23 38 17 20 38 19 21 38 20 22 51 27 23 1 1 25 21 0 5 20 21 10 22 23 38 17 20 38 19 21 38 20 22 51 26 23 1 1 25 21 0 5 20 21 9 22 23 38 17 20 38 19 21 38 20 22 51 25 23 1 1 25 21 0 5 20 21 8 22 23 38 17 20 38 19 21 38 20 22 51 24 23 1 1 25 21 0 5 20 21 7 22 23 38 17 20 38 19 21 38 20 22 51 23 23 1 1 25 21 0 5 20 21 6 22 23 38 17 20 38 19 21 38 20 22 51 22 23 1 1 25 21 0 5 20 21 5 22 23 38 17 20 38 19 21 38 20 22 51 21 23 1 1 25 21 0 5 20 21 4 22 23 38 17 20 38 19 21 38 20 22 51 20 23 1 1 25 21 0 5 20 21 3 22 23 38 22 20 38 19 21 25 21 0 2 20 21 77 0 2 1 23 2 38 24 3 38 25 4 25 21 0 4 1 3 4 2 77 0 2 1 26 2 38 24 3 38 25 4 25 21 0 4 1 3 4 2 77 0 2 1 27 2 38 24 3 38 25 4 25 21 0 4 1 3 4 2 77 0 2 1 28 2 38 24 3 38 25 4 25 21 0 4 1 3 4 2 77 0 2 1 29 2 38 24 3 38 25 4 25 21 0 4 1 3 4 2 77 0 2 1 30 2 38 24 3 38 25 4 25 21 0 4 1 3 4 2 77 0 2 1 31 2 38 24 3 38 32 4 25 21 0 4 1 3 4 2 77 0 2 1 33 2 38 24 3 38 32 4 25 21 0 4 1 3 4 2 77 0 2 1 34 2 38 24 3 38 32 4 25 21 0 4 1 3 4 2 77 0 2 1 35 2 38 24 3 38 32 4 25 21 0 4 1 3 4 2 77 0 2 1 36 2 38 24 3 38 32 4 25 21 0 4 1 3 4 2 77 0 2 1 37 2 38 24 3 38 32 4 25 21 0 4 1 3 4 2 77 0 2 1 38 2 38 24 3 38 32 4 25 21 0 4 1 3 4 2 77 0 2 0 1 38 39 2 25 21 0 2 1 2 77 0 1 3 40 41 42 5 38 43 4 38 19 5 38 44 6 38 19 7 23 21 6 3 6 7 3 23 45 6 1 6 38 46 7 38 47 8 25 21 0 7 4 5 6 7 2 8 1) #(0 36 39 59 62 84 107 130 153 176 199 222 245 268 291 314 337 360 383 406 418 438 458 478 498 518 538 558 578 598 618 638 658 678 692) #("Euclidean distance" "Standarized Euclidean distance" "Mahalanobis distance" "City Block Measure" "Correlation Matrix" "Cosine Matrix" "Average linkage" "Centroid linkage" "Complete linkage" "Gower's method" "Single linkage" "Ward's method" "Weighted linkage" "Close" "About dendrogram" NIL #(DASH EUCLID STD-EUCLID MAHA CITYBLOCK CORR COSINE AVERAGE CENTROID COMPLETE GOWER SINGLE WARD WEIGHTED CLOSE ABOUT) MENU-ITEM-PROTO KIND-OF-P :NEW :ACTION SEND DASH-ITEM-PROTO "euclidean" :LOADING-DENDRO :PROXIMITY "std-euclidean" "mahalanobis" "cityblock" "correlation" "cosine" "average" :LINKAGE "centroid" "complete" "gower" "single" "ward" "weighted" :REMOVE (0 0) "About Dendrogram" "Dendrogram for Hierachical clustering, 1997" DIALOG-PROTO TEXT-ITEM-PROTO LIST :TITLE :LOCATION) 0 NIL) DENDRO :MAKE-MENU-ITEM BYTE-CODE-CLOSE XLISP::ADD-METHOD) 0 NIL)
#K(#(77 0 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(SQUARED-EUCLIDEAN-MATRIX #K(#(77 0 2 1 0 7 23 1 3 1 1 23 2 4 2 3 3 23 3 4 1 4 0 2 5 1 5 23 4 6 2 1 5 61 112 5 7 0 2 8 1 3 23 4 9 2 1 8 2 45 6 9 9 23 5 9 2 9 9 67 4 5 8 9 0 67 4 8 5 9 0 61 112 8 8 37 60 2 4 8 7 61 112 5 5 37 60 1 6 5 3 11 0 4) #(0 27 42 75 81 85 91) #(0 LENGTH LIST MAKE-ARRAY SELECT INNER-PRODUCT) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(77 0 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #("Arg(x) : list type
   Returns the Squared Euclidean distance matrix for the rows" FUNCTION-DOCUMENTATION SQUARED-EUCLIDEAN-MATRIX %SET-GET) 0 NIL)) EVAL) 0 NIL)
#K(#(77 0 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(EUCLIDEAN-MATRIX #K(#(77 0 2 1 0 7 23 1 3 1 1 23 2 4 2 3 3 38 3 5 23 4 4 3 4 5 2 0 2 5 1 5 23 5 6 2 1 5 61 112 5 7 0 2 8 1 3 23 5 9 2 1 8 2 45 6 9 9 23 6 9 2 9 9 23 7 9 1 9 67 4 5 8 9 0 61 112 8 8 37 60 2 4 8 7 61 112 5 5 37 60 1 6 5 3 23 8 6 1 4 2 43 4 6 0 57 0) #(0 32 47 79 85 89 95) #(0 LENGTH LIST :INITIAL-ELEMENT MAKE-ARRAY SELECT INNER-PRODUCT SQRT TRANSPOSE) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(77 0 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #("Arg(x) : list type
   Returns the Euclidean distance matrix for the rows" FUNCTION-DOCUMENTATION EUCLIDEAN-MATRIX %SET-GET) 0 NIL)) EVAL) 0 NIL)
#K(#(77 0 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(STANDARDIZED-EUCLIDEAN-MATRIX #K(#(77 0 2 2 0 1 11 23 2 4 1 1 23 3 5 1 1 23 4 6 2 4 4 23 5 6 1 6 0 3 7 0 5 8 16 8 9 1 2 23 6 10 1 9 20 10 7 7 17 8 8 16 8 9 21 1 1 3 8 0 2 10 1 8 23 7 11 2 1 10 61 112 10 12 0 2 13 1 6 23 7 14 2 1 13 2 45 11 14 14 2 47 14 7 14 23 8 14 2 14 14 23 9 14 1 14 67 6 10 13 14 0 67 6 13 10 14 0 61 112 13 13 37 60 5 7 13 12 61 112 10 10 37 60 4 9 10 4 11 0 6) #(0 39 54 59 64 79 122 128 132 138) #(0 NIL LENGTH TRANSPOSE LIST MAKE-ARRAY STANDARD-DEVIATION SELECT INNER-PRODUCT SQRT) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(77 0 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #("Arg(x) : list type
   Returns the Standardized Euclidean distance matrix for the rows" FUNCTION-DOCUMENTATION STANDARDIZED-EUCLIDEAN-MATRIX %SET-GET) 0 NIL)) EVAL) 0 NIL)
#K(#(77 0 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MAHALANOBIS-MATRIX #K(#(77 0 2 2 0 1 11 23 2 4 1 1 16 1 5 23 2 5 1 5 23 3 6 2 4 5 38 4 7 23 5 6 3 6 7 1 23 6 6 1 6 23 7 0 1 6 23 3 7 2 4 4 23 5 7 1 7 0 3 8 1 5 23 8 9 2 1 8 61 112 8 10 0 3 11 1 3 23 8 12 2 1 11 2 45 9 12 12 23 3 13 2 5 2 38 4 14 23 5 13 3 13 14 12 23 9 12 3 12 6 13 16 12 12 67 7 8 11 12 0 67 7 11 8 12 0 61 112 11 11 37 60 2 4 11 10 61 112 8 8 37 60 1 6 8 4 11 0 7) #(0 62 77 130 136 140 146) #(1 0 LENGTH LIST :INITIAL-CONTENTS MAKE-ARRAY COVARIANCE-MATRIX INVERSE SELECT MATMULT) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(77 0 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #("Arg(x) : list type
   Returns the Mahalanobis distance matrix for the rows" FUNCTION-DOCUMENTATION MAHALANOBIS-MATRIX %SET-GET) 0 NIL)) EVAL) 0 NIL)
#K(#(77 0 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CITYBLOCK-MATRIX #K(#(77 0 2 1 0 7 23 1 3 1 1 23 2 4 2 3 3 38 3 5 23 4 4 3 4 5 2 0 2 5 1 5 23 5 6 2 1 5 61 112 5 7 0 2 8 1 3 23 5 9 2 1 8 2 45 6 9 9 23 6 9 1 9 23 7 9 1 9 67 4 5 8 9 0 61 112 8 8 37 60 2 4 8 7 61 112 5 5 37 60 1 6 5 3 23 8 6 1 4 2 43 4 6 0 57 0) #(0 32 47 78 84 88 94) #(0 LENGTH LIST :INITIAL-ELEMENT MAKE-ARRAY SELECT ABS SUM TRANSPOSE) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(77 0 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #("Arg(x) : list type
   Returns the Manhattan or City Block matrix for the rows" FUNCTION-DOCUMENTATION CITYBLOCK-MATRIX %SET-GET) 0 NIL)) EVAL) 0 NIL)
#K(#(77 0 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(COSINE-MATRIX #K(#(77 0 2 1 0 10 23 1 3 1 1 23 2 4 2 3 3 23 3 4 1 4 0 2 5 1 5 23 4 6 2 1 5 23 5 7 2 6 6 23 6 7 1 7 61 47 7 7 61 112 5 8 0 2 9 1 3 23 4 10 2 1 9 23 5 11 2 10 10 23 6 11 1 11 61 47 11 11 23 5 12 2 6 10 23 7 10 3 12 7 11 67 4 5 9 10 0 67 4 9 5 10 0 61 112 9 9 37 60 2 4 9 8 61 112 5 5 37 60 1 6 5 3 11 0 4) #(0 27 57 107 113 117 123) #(0 LENGTH LIST MAKE-ARRAY SELECT INNER-PRODUCT SQRT *) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(77 0 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #("Arg(x) : list type
   Returns the Cosine matrix for the rows" FUNCTION-DOCUMENTATION COSINE-MATRIX %SET-GET) 0 NIL)) EVAL) 0 NIL)
#K(#(77 0 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CORRELATION-MATRIX #K(#(77 0 2 1 0 10 23 1 3 1 1 16 1 4 23 1 4 1 4 23 2 4 2 4 3 38 3 5 23 4 6 1 1 23 5 4 3 4 5 6 23 6 4 1 4 23 7 5 1 4 23 8 5 1 5 61 47 5 5 23 2 6 2 3 3 23 5 6 1 6 0 2 7 1 5 9 5 7 8 61 112 7 9 0 2 10 1 3 9 5 10 11 68 4 7 10 12 23 9 11 3 12 8 11 67 6 7 10 11 0 67 6 10 7 11 0 61 112 10 10 37 60 2 4 10 9 61 112 7 7 37 60 1 6 7 3 11 0 6) #(0 75 88 120 126 130 136) #(0 LENGTH LIST :INITIAL-CONTENTS TRANSPOSE MAKE-ARRAY COVARIANCE-MATRIX DIAGONAL SQRT *) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(77 0 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #("Arg(x) : list type
   Returns the Correlation matrix for the rows" FUNCTION-DOCUMENTATION CORRELATION-MATRIX %SET-GET) 0 NIL)) EVAL) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(AGNES #K(#(77 3 2 0 0 0 3 2 2 0 1 9 23 4 5 2 1 4 23 5 5 1 5 0 5 6 23 6 7 1 1 23 7 8 1 4 23 7 9 1 5 23 7 10 1 6 23 4 11 2 7 3 37 61 2 3 3 11 25 7 0 2 9 10 23 8 0 1 7 59 3 11 12 13 49 9 13 0 49 10 12 0 49 11 11 0 38 11 11 38 10 12 23 12 7 5 7 5 11 12 2 38 11 11 38 10 12 38 9 13 23 13 5 4 5 11 12 13 38 11 11 38 10 12 23 14 6 3 6 11 12 38 9 11 23 7 11 1 11 23 15 8 2 8 11 23 7 11 1 5 23 15 9 2 9 11 23 7 11 1 6 23 15 10 2 10 11 1 1) #(0 46 58 64) #(1 0 ("average") (:TYPE) ARRAY-DIMENSION ISEQ COPY-ARRAY LIST MINIMUM-DISTANCE M J I MERGE-DISTANCES MERGE-CLUSTERS-DIST MERGE-CLUSTERS APPEND) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 1 0 0 25 1 0 1 1) #(0) #((PROGN #K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MINIMUM-DISTANCE #K(#(77 0 2 2 0 1 10 23 2 4 2 1 3 23 3 4 1 4 17 4 4 38 4 5 0 2 6 0 2 7 0 4 8 16 8 9 1 7 0 9 10 0 3 11 1 5 68 1 9 11 12 0 5 13 37 60 3 4 12 13 0 9 6 0 11 7 0 12 5 61 112 11 11 37 60 2 6 11 10 17 8 8 16 8 9 21 1 1 8 8 13 0 3 6 7 5) #(0 38 46 60 69 73 79 85 90) #(NIL 0 ARRAY-DIMENSION ISEQ POSITIVE-INFINITY) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL) #K(#(77 0 1 3 0 1 2 0 25 3 0 3 3 2 1) #(0) #("Args: x
Finds the smallest element of a distance matrix,
and the corresponding indices." FUNCTION-DOCUMENTATION MINIMUM-DISTANCE %SET-GET) 0 NIL)) EVAL) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MERGE-CLUSTERS-DIST #K(#(77 0 5 0 3 23 0 5 1 1 23 1 5 1 5 23 2 5 2 3 5 23 2 5 2 2 5 9 1 3 6 9 1 2 7 23 3 6 3 6 7 4 23 3 6 1 6 23 4 7 2 1 5 25 5 0 2 6 7) #(0) #(LENGTH ISEQ DELETE LIST SELECT APPEND) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MERGE-CLUSTERS #K(#(77 0 4 0 3 23 0 4 1 1 23 1 4 1 4 23 2 4 2 3 4 23 2 4 2 2 4 9 1 3 5 9 1 2 6 23 3 5 2 5 6 23 3 5 1 5 23 4 6 2 1 4 25 5 0 2 5 6) #(0) #(LENGTH ISEQ DELETE LIST SELECT APPEND) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MERGE-DISTANCES #K(#(77 0 6 4 0 1 2 3 13 23 4 10 2 1 9 37 61 1 2 8 10 11 0 6 23 4 10 2 1 9 61 109 10 11 61 109 10 12 23 5 11 2 11 12 38 6 12 23 7 11 3 11 12 9 2 45 10 8 12 23 8 12 1 12 61 112 12 12 23 8 13 1 10 23 8 14 1 10 23 9 14 2 4 14 23 9 14 2 3 14 9 2 3 15 23 10 15 1 15 23 11 15 1 15 9 2 4 16 23 10 16 1 16 23 11 16 1 16 23 12 17 3 1 3 13 23 12 17 3 17 9 14 23 12 18 3 1 4 13 23 12 18 3 18 9 14 39 5 19 23 12 20 2 2 14 23 13 19 2 19 20 2 45 10 8 20 23 5 20 2 7 20 38 14 21 39 11 22 23 13 22 2 22 19 23 7 19 3 20 21 22 68 1 3 4 20 23 15 15 7 17 18 20 15 16 19 5 23 12 16 3 1 14 14 23 16 0 4 11 12 12 16 23 16 0 4 11 9 12 15 23 17 13 1 15 23 16 0 4 11 12 9 13 11 0 11) #(0 21 24) #(#2A((0)) 1 2 0 ARRAY-DIMENSION LIST :INITIAL-ELEMENT MAKE-ARRAY ISEQ DELETE COMBINE LENGTH SELECT MAPCAR :INITIAL-CONTENTS MERGE-METHODS SET-SELECT TRANSPOSE) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MERGE-METHODS #K(#(77 0 8 8 0 1 2 3 4 5 6 7 4 2 43 4 5 16 23 8 17 2 7 15 21 0 1 2 17 2 47 4 16 17 23 9 17 3 17 1 1 2 47 5 16 18 23 9 18 3 18 2 2 2 43 17 18 17 23 9 18 4 4 5 3 3 2 42 16 16 19 2 47 18 19 18 2 45 17 18 16 25 10 0 1 16 23 8 17 2 7 14 21 0 3 4 17 2 43 4 6 17 2 43 16 6 18 2 47 17 18 17 23 9 17 3 17 1 1 2 43 5 6 18 2 43 16 6 19 2 47 18 19 18 23 9 18 3 18 2 2 2 43 17 18 17 2 43 16 6 18 2 47 6 18 18 23 9 18 3 18 3 3 61 47 18 18 2 45 17 18 16 25 10 0 1 16 23 8 17 2 7 13 21 0 5 6 17 2 42 1 1 16 2 47 16 9 16 2 42 2 2 17 2 47 17 9 17 2 43 16 17 16 2 42 3 3 17 2 47 17 8 17 2 45 16 17 16 25 10 0 1 16 23 8 17 2 7 12 21 0 7 8 17 2 43 1 2 16 2 47 16 9 0 57 0 23 8 17 2 7 11 21 0 9 10 17 25 11 0 2 1 2 23 8 17 2 7 10 21 0 11 12 17 25 12 0 2 1 2 2 47 4 16 17 2 42 17 1 17 2 47 5 16 18 2 42 18 2 18 2 43 17 18 0 57 0) #(0 29 86 97 177 188 233 244 256 267 273 284 290) #(4 2 "complete" "single" "weighted" "gower" "ward" "centroid" STRING-EQUAL * SQRT PMIN PMAX) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DECISION-XY #K(#(77 0 2 1 0 2 23 1 3 1 1 21 0 1 2 3 25 2 0 2 1 2 23 3 3 1 1 71 3 4 1 4 25 2 0 2 3 4) #(0 16 22) #(0 ATOM LIST CENTER) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(MAKE-SEQ #K(#(77 0 2 0 4 16 1 2 17 1 3 23 0 4 1 2 21 0 1 2 4 25 1 0 1 2 23 2 4 1 2 21 0 3 4 4 38 3 4 61 112 4 4 49 3 4 4 23 4 5 1 3 20 4 5 0 57 0 23 4 4 1 2 23 4 5 1 3 20 4 5 0 57 0) #(0 21 26 36 58) #(FLOATP LIST INTEGERP SEQ MAKE-SEQ) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(DENDRO-SEQ #K(#(77 0 2 1 0 0 49 1 2 0 25 2 0 1 1) #(0) #(0 SEQ MAKE-SEQ) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(CENTER #K(#(77 0 2 0 4 16 1 2 71 2 2 1 3 23 0 4 1 2 21 0 1 2 4 23 1 4 1 2 1 3 23 2 4 1 2 23 0 5 1 3 21 0 4 5 5 23 1 5 1 3 1 6 23 2 5 1 3 23 3 2 2 4 5 25 4 0 1 2) #(0 23 30 35 45 52 57) #(FINAL? LOC CENTER LIST MEAN) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(LOC #K(#(77 0 2 1 0 1 23 1 3 1 1 21 0 1 2 3 11 0 1 23 2 3 1 1 2 45 3 2 3 23 3 3 1 3 23 4 3 2 1 3 25 5 0 1 3) #(0 16 19) #(1 ATOM LENGTH ISEQ SELECT MEAN) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
#K(#(77 0 1 2 0 1 1 23 2 3 1 2 25 3 0 2 1 3) #(0) #(FINAL? #K(#(77 0 2 2 0 1 2 23 2 4 1 1 21 0 1 2 4 11 0 2 23 3 4 1 1 23 4 4 1 4 23 4 5 1 1 37 61 3 4 4 5 11 0 2 11 0 3) #(0 17 20 41 44) #(T NIL ATOM COMBINE LENGTH) 0 NIL) BYTE-CODE-CLOSE %SET-SYMBOL-FUNCTION) 0 NIL)
