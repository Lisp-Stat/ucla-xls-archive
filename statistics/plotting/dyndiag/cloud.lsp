(def cloud-data (quote (
  (0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 0) 
  (0 1 3 4 6 9 18 25 27 28 29 32 33 35 38 39 53 55 56 59 65 68 82 83) 
  (1.75 2.7 4.1 2.35 4.25 1.6 1.3 3.35 2.85 2.2 4.4 3.1 3.95 2.9 2.05 4 3.35 
        3.7 3.8 3.4 3.15 3.15 4.01 4.65) 
  (13.4 37.9 3.9 5.3 7.1 6.9 4.6 4.9 12.1 5.2 4.1 2.8 6.8 3 7 11.3 4.2 3.3 2.2 
       6.5 3.1 2.6 8.3 7.4) 
  (-0.56225 0.10278 -0.70333 -0.27901 -0.60206 -1.74473 -0.51286 -0.7122 
         -0.12436 -1.07572 -0.62709 -0.66959 -0.09909 -0.90658 -0.84164 
         -0.40012 -0.62525 -0.01773 -0.63827 -0.84771 -1.13668 -0.86646 
         -0.91009 -0.77469) 
  (2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1)  
  (1.1089 0.74194 0.79865 0.78604 0.38917 0.55751 -0.3279 0.65896 0.80277 
        0.70415 0.44091 0.60746 0.75891 0.68485 1.07408 0.64836 0.56348
        0.62531 0.06446 0.7364 0.30535 -0.08619 0.03743 -0.55284))))
(def cloud-reg (regression-model (select cloud-data (iseq 6)) 
                                 (select cloud-data 6)
                                :predictor-names '("Action" "Day"
                "Seeding Suitability" "%CloudCover" "Prewetness"
                "CloudType")))
(send cloud-reg :graphics-menu "Cloud-data")

