(require "f2cl_macros")

(defun lubksb (a n np indx b)
 (declare (type (simple-array double-float (* *)) a)) (declare (type fixnum n))
 (declare (type fixnum np)) (declare (type (simple-array fixnum (*)) indx))
 (declare (type (simple-array double-float (*)) b))
 (prog ((j 0) (sum 0.0d0) (ll 0) (i 0) (ii 0)) (declare (type fixnum j))
  (declare (type double-float sum)) (declare (type fixnum ll))
  (declare (type fixnum i)) (declare (type fixnum ii)) (setf ii 0)
  (fdo ((i 1 (+ i 1))) ((> i n) nil)
   (tagbody (setf ll (fref indx i)) (setf sum (fref b ll))
    (fset (fref b ll) (fref b i))
    (cond
     ((/= ii 0)
      (fdo ((j ii (+ j 1))) ((> j (+ i (- 1))) nil)
       (tagbody (setf sum (+ sum (* (* -1 (fref a i j)) (fref b j)))))
     ))
     ((/= sum 0.0) (setf ii i))
    )
    (fset (fref b i) sum)
  ))
  (fdo ((i n (+ i (- 1)))) ((> i 1) nil)
   (tagbody (setf sum (fref b i))
    (cond
     ((< i n)
      (fdo ((j (+ i 1) (+ j 1))) ((> j n) nil)
       (tagbody (setf sum (+ sum (* (* -1 (fref a i j)) (fref b j)))))
    )))
    (fset (fref b i) (/ sum (fref a i i)))
  ))
  (return (values a n np indx b))
))

