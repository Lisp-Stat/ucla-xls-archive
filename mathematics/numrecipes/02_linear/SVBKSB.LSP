(defun svbksb (u w v m n mp np b x &key (nmax 100))
 (declare (type (simple-array double-float (* *)) u))
 (declare (type (simple-array double-float (*)) w))
 (declare (type (simple-array double-float (* *)) v)) (declare (type fixnum m))
 (declare (type fixnum n)) (declare (type fixnum mp))
 (declare (type fixnum np)) (declare (type (simple-array double-float (*)) b))
 (declare (type (simple-array double-float (*)) x))
 (declare (type fixnum nmax))
 (prog
  ((tmp (make-array '(nmax) :element-type 'double-float)) (jj 0) (i 0)
   (s 0.0d0) (j 0)
  )
  (declare (type (simple-array double-float (*)) tmp))
  (declare (type fixnum jj)) (declare (type fixnum i))
  (declare (type double-float s)) (declare (type fixnum j))
  (fdo ((j 1 (+ j 1))) ((> j n) nil)
   (tagbody (setf s 0.0)
    (cond
     ((/= (fref w j) 0.0)
      (fdo ((i 1 (+ i 1))) ((> i m) nil)
       (tagbody (setf s (+ s (* (fref u i j) (fref b i)))))
      )
      (setf s (/ s (fref w j)))
    ))
    (fset (fref tmp j) s)
  ))
  (fdo ((j 1 (+ j 1))) ((> j n) nil)
   (tagbody (setf s 0.0)
    (fdo ((jj 1 (+ jj 1))) ((> jj n) nil)
     (tagbody (setf s (+ s (* (fref v j jj) (fref tmp jj)))))
    )
    (fset (fref x j) s)
  ))
  (return (values u w v m n mp np b x))
))

