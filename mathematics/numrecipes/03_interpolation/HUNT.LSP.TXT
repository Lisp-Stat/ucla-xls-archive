(defun hunt (xx n x jlo) (declare (type (simple-array double-float (*)) xx))
 (declare (type fixnum n)) (declare (type double-float x))
 (declare (type fixnum jlo))
 (prog ((ascnd nil) (jm 0) (inc 0) (jhi 0)) (declare (type t ascnd))
  (declare (type fixnum jm)) (declare (type fixnum inc))
  (declare (type fixnum jhi)) (setf ascnd (> (fref xx n) (fref xx 1)))
  (cond ((or (<= jlo 0) (> jlo n)) (setf jlo 0) (setf jhi (+ n 1)) (go label3))
  )
  (setf inc 1)
  (cond
   ((>= x (fref xx jlo))
    (tagbody label1 (setf jhi (+ jlo inc))
     (cond ((> jhi n) (setf jhi (+ n 1)))
      ((>= x (fref xx jhi)) (setf jlo jhi) (setf inc (+ inc inc)) (go label1))
   )))
   (t
    (tagbody (setf jhi jlo) label2 (setf jlo (+ jhi (- inc)))
     (cond ((< jlo 1) (setf jlo 0))
      ((< x (fref xx jlo)) (setf jhi jlo) (setf inc (+ inc inc)) (go label2))
  ))))
  label3 (if (= (+ jhi (- jlo)) 1) (go end_label)) (setf jm (/ (+ jhi jlo) 2))
  (cond ((> x (fref xx jm)) (setf jlo jm)) (t (setf jhi jm)))
  (return (values xx n x jlo))
))

