(defun el2 (x qqc aa bb &key (pi_ 3.1415927) (ca 3.0E-4) (cb 1.0E-9))
 (declare (type double-float x)) (declare (type double-float qqc))
 (declare (type double-float aa)) (declare (type double-float bb))
 (declare (type double-float pi_)) (declare (type double-float ca))
 (declare (type double-float cb))
 (prog
  ((g 0.0d0) (e 0.0d0) (em 0.0d0) (l 0) (f 0.0d0) (y 0.0d0) (eye 0.0d0)
   (z 0.0d0) (p 0.0d0) (d 0.0d0) (c 0.0d0) (b 0.0d0) (a 0.0d0) (qc 0.0d0)
   (el2 0.0d0)
  )
  (declare (type double-float g)) (declare (type double-float e))
  (declare (type double-float em)) (declare (type fixnum l))
  (declare (type double-float f)) (declare (type double-float y))
  (declare (type double-float eye)) (declare (type double-float z))
  (declare (type double-float p)) (declare (type double-float d))
  (declare (type double-float c)) (declare (type double-float b))
  (declare (type double-float a)) (declare (type double-float qc))
  (declare (type double-float el2))
  (cond ((= x 0.0) (setf el2 0.0))
   ((/= qqc 0.0)
    (tagbody (setf qc qqc) (setf a aa) (setf b bb) (setf c (expt x 2))
     (setf d (+ 1.0 c)) (setf p (sqrt (/ (+ 1.0 (* (expt qc 2) c)) d)))
     (setf d (/ x d)) (setf c (/ d (* 2.0 p))) (setf z (+ a (- b)))
     (setf eye a) (setf a (* 0.5 (+ b a))) (setf y (abs (/ 1.0 x)))
     (setf f 0.0) (setf l 0) (setf em 1.0) (setf qc (abs qc)) label1
     (setf b (+ (* eye qc) b)) (setf e (* em qc)) (setf g (/ e p))
     (setf d (+ (* f g) d)) (setf f c) (setf eye a) (setf p (+ g p))
     (setf c (* 0.5 (+ (/ d p) c))) (setf g em) (setf em (+ qc em))
     (setf a (* 0.5 (+ (/ b em) a))) (setf y (+ (/ (* -1 e) y) y))
     (if (= y 0.0) (setf y (* (sqrt e) cb)))
     (cond
      ((> (abs (+ g (- qc))) (* ca g)) (setf qc (* (sqrt e) 2.0))
       (setf l (+ l l)) (if (< y 0.0) (setf l (+ l 1))) (go label1)
     ))
     (if (< y 0.0) (setf l (+ l 1)))
     (setf e (/ (* (+ (atan (/ em y)) (* pi_ l)) a) em))
     (if (< x 0.0) (setf e (- e))) (setf el2 (+ e (* c z)))
   ))
   (t (error "failure in EL2"))
  )
  (return el2)
))

