(defun factrl (n) (declare (type fixnum n))
 (prog
  ((a (make-array '(33) :element-type 'double-float)) (ntop 0) (j 0)
   (factrl 0.0d0)
  )
  (declare (type (simple-array double-float (*)) a))
  (declare (type fixnum ntop)) (declare (type fixnum j))
  (declare (type double-float factrl)) (setq ntop 0)
  (cond ((< n 0) (error "negative factorial"))
   ((<= n ntop) (setf factrl (fref a (+ n 1))))
   ((<= n 32)
    (fdo ((j (+ ntop 1) (+ j 1))) ((> j n) nil)
     (tagbody (fset (fref a (+ j 1)) (* j (fref a j))))
    )
    (setf ntop n) (setf factrl (fref a (+ n 1)))
   )
   (t (setf factrl (exp (gammln (+ n 1.0)))))
  )
  (return factrl)
))

