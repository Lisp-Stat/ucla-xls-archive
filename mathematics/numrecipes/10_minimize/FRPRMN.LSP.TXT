(defun frprmn (p n ftol iter fret &key (nmax 50) (itmax 200) (eps 1.0E-10))
 (declare (type (simple-array double-float (*)) p)) (declare (type fixnum n))
 (declare (type double-float ftol)) (declare (type fixnum iter))
 (declare (type double-float fret)) (declare (type fixnum nmax))
 (declare (type fixnum itmax)) (declare (type double-float eps))
 (prog
  ((g (make-array '(nmax) :element-type 'double-float))
   (h (make-array '(nmax) :element-type 'double-float))
   (xi (make-array '(nmax) :element-type 'double-float)) (gam 0.0d0)
   (dgg 0.0d0) (gg 0.0d0) (j 0) (fp 0.0d0)
  )
  (declare (type (simple-array double-float (*)) g))
  (declare (type (simple-array double-float (*)) h))
  (declare (type (simple-array double-float (*)) xi))
  (declare (type double-float gam)) (declare (type double-float dgg))
  (declare (type double-float gg)) (declare (type fixnum j))
  (declare (type double-float fp)) (setf fp (func p))
  (multiple-value-setq (p xi) (dfunc p xi))
  (fdo ((j 1 (+ j 1))) ((> j n) nil)
   (tagbody (fset (fref g j) (- (fref xi j))) (fset (fref h j) (fref g j))
    (fset (fref xi j) (fref h j))
  ))
  (fdo ((iter 1 (+ iter 1))) ((> iter itmax) nil)
   (tagbody (multiple-value-setq (p xi n fret) (linmin p xi n fret))
    (if
     (<= (* 2.0 (abs (+ fret (- fp)))) (* ftol (+ (+ (abs fret) (abs fp)) eps))
     )
     (go end_label)
    )
    (setf fp (func p)) (multiple-value-setq (p xi) (dfunc p xi)) (setf gg 0.0)
    (setf dgg 0.0)
    (fdo ((j 1 (+ j 1))) ((> j n) nil)
     (tagbody (setf gg (+ gg (expt (fref g j) 2)))
      (setf dgg (+ dgg (* (+ (fref xi j) (fref g j)) (fref xi j))))
    ))
    (if (= gg 0.0) (go end_label)) (setf gam (/ dgg gg))
    (fdo ((j 1 (+ j 1))) ((> j n) nil)
     (tagbody (fset (fref g j) (- (fref xi j)))
      (fset (fref h j) (+ (fref g j) (* gam (fref h j))))
      (fset (fref xi j) (fref h j))
  ))))
  (error "FRPR maximum iterations exceeded") (go end_label) end_label
  (return (values p n ftol iter fret))
))

