(defun ddpoly (c nc x pd nd) (declare (type (simple-array double-float (*)) c))
 (declare (type fixnum nc)) (declare (type double-float x))
 (declare (type (simple-array double-float (*)) pd)) (declare (type fixnum nd))
 (prog ((const 0.0d0) (nnd 0) (i 0) (j 0)) (declare (type double-float const))
  (declare (type fixnum nnd)) (declare (type fixnum i))
  (declare (type fixnum j)) (fset (fref pd 1) (fref c nc))
  (fdo ((j 2 (+ j 1))) ((> j nd) nil) (tagbody (fset (fref pd j) 0.0)))
  (fdo ((i (+ nc (- 1)) (+ i (- 1)))) ((> i 1) nil)
   (tagbody (setf nnd (min nd (+ (+ nc 1) (- i))))
    (fdo ((j nnd (+ j (- 1)))) ((> j 2) nil)
     (tagbody (fset (fref pd j) (+ (* (fref pd j) x) (fref pd (+ j (- 1))))))
    )
    (fset (fref pd 1) (+ (* (fref pd 1) x) (fref c i)))
  ))
  (setf const 2.0)
  (fdo ((i 3 (+ i 1))) ((> i nd) nil)
   (tagbody (fset (fref pd i) (* const (fref pd i))) (setf const (* const i)))
  )
  (return (values c nc x pd nd))
))

