(defun midpnt (func a b s n) (declare (type double-float a))
 (declare (type double-float b)) (declare (type double-float s))
 (declare (type fixnum n))
 (prog
  ((j 0) (sum 0.0d0) (x 0.0d0) (ddel 0.0d0) (del 0.0d0) (tnm 0.0d0) (it 0))
  (declare (type fixnum j)) (declare (type double-float sum))
  (declare (type double-float x)) (declare (type double-float ddel))
  (declare (type double-float del)) (declare (type double-float tnm))
  (declare (type fixnum it))
  (cond
   ((= n 1) (setf s (* (+ b (- a)) (funcall (func (* 0.5 (+ a b))))))
    (setf it 1)
   )
   (t (setf tnm it) (setf del (/ (+ b (- a)) (* 3.0 tnm)))
    (setf ddel (+ del del)) (setf x (+ a (* 0.5 del))) (setf sum 0.0)
    (fdo ((j 1 (+ j 1))) ((> j it) nil)
     (tagbody (setf sum (+ sum (funcall (func x)))) (setf x (+ x ddel))
      (setf sum (+ sum (funcall (func x)))) (setf x (+ x del))
    ))
    (setf s (/ (+ s (/ (* (+ b (- a)) sum) tnm)) 3.0)) (setf it (* 3 it))
  ))
  (return (values func a b s n))
))

