(defun midinf (funk aa bb s n) (declare (type double-float aa))
 (declare (type double-float bb)) (declare (type double-float s))
 (declare (type fixnum n))
 (prog
  ((j 0) (sum 0.0d0) (ddel 0.0d0) (del 0.0d0) (tnm 0.0d0) (it 0) (a 0.0d0)
   (b 0.0d0) (x 0.0d0)
  )
  (declare (type fixnum j)) (declare (type double-float sum))
  (declare (type double-float ddel)) (declare (type double-float del))
  (declare (type double-float tnm)) (declare (type fixnum it))
  (declare (type double-float a)) (declare (type double-float b))
  (declare (type double-float x))
  (fset (func x) (/ (funcall (funk (/ 1.0 x))) (expt x 2))) (setf b (/ 1.0 aa))
  (setf a (/ 1.0 bb))
  (cond ((= n 1) (setf s (* (+ b (- a)) (func (* 0.5 (+ a b))))) (setf it 1))
   (t (setf tnm it) (setf del (/ (+ b (- a)) (* 3.0 tnm)))
    (setf ddel (+ del del)) (setf x (+ a (* 0.5 del))) (setf sum 0.0)
    (fdo ((j 1 (+ j 1))) ((> j it) nil)
     (tagbody (setf sum (+ sum (func x))) (setf x (+ x ddel))
      (setf sum (+ sum (func x))) (setf x (+ x del))
    ))
    (setf s (/ (+ s (/ (* (+ b (- a)) sum) tnm)) 3.0)) (setf it (* 3 it))
  ))
  (return (values funk aa bb s n))
))

