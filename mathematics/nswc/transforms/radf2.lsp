(defun radf2 (ido l1 cc ch wa1) (declare (type fixnum ido))
 (declare (type fixnum l1))
 (declare (type (simple-array double-float (* * *)) cc))
 (declare (type (simple-array double-float (* * *)) ch))
 (declare (type (simple-array double-float (*)) wa1))
 (prog ((ti2 0.0d0) (tr2 0.0d0) (ic 0) (i 0) (idp2 0) (k 0))
  (declare (type double-float ti2)) (declare (type double-float tr2))
  (declare (type fixnum ic)) (declare (type fixnum i))
  (declare (type fixnum idp2)) (declare (type fixnum k))
  (fdo ((k 1 (+ k 1))) ((> k l1) nil)
   (tagbody (fset (fref ch 1 1 k) (+ (fref cc 1 k 1) (fref cc 1 k 2)))
    (fset (fref ch ido 2 k) (+ (fref cc 1 k 1) (- (fref cc 1 k 2))))
  ))
  (arithmetic-if (+ ido (- 2)) (go label107) (go label105) (go label102))
  label102 (setf idp2 (+ ido 2)) (if (< (/ (+ ido (- 1)) 2) l1) (go label108))
  (fdo ((k 1 (+ k 1))) ((> k l1) nil)
   (tagbody
    (fdo ((i 3 (+ i 2))) ((> i ido) nil)
     (tagbody (setf ic (+ idp2 (- i)))
      (setf tr2
       (+ (* (fref wa1 (+ i (- 2))) (fref cc (+ i (- 1)) k 2))
        (* (fref wa1 (+ i (- 1))) (fref cc i k 2))
      ))
      (setf ti2
       (+ (* (fref wa1 (+ i (- 2))) (fref cc i k 2))
        (* (* -1 (fref wa1 (+ i (- 1)))) (fref cc (+ i (- 1)) k 2))
      ))
      (fset (fref ch i 1 k) (+ (fref cc i k 1) ti2))
      (fset (fref ch ic 2 k) (+ ti2 (- (fref cc i k 1))))
      (fset (fref ch (+ i (- 1)) 1 k) (+ (fref cc (+ i (- 1)) k 1) tr2))
      (fset (fref ch (+ ic (- 1)) 2 k) (+ (fref cc (+ i (- 1)) k 1) (- tr2)))
  ))))
  (go label111) label108
  (fdo ((i 3 (+ i 2))) ((> i ido) nil)
   (tagbody (setf ic (+ idp2 (- i)))
    (fdo ((k 1 (+ k 1))) ((> k l1) nil)
     (tagbody
      (setf tr2
       (+ (* (fref wa1 (+ i (- 2))) (fref cc (+ i (- 1)) k 2))
        (* (fref wa1 (+ i (- 1))) (fref cc i k 2))
      ))
      (setf ti2
       (+ (* (fref wa1 (+ i (- 2))) (fref cc i k 2))
        (* (* -1 (fref wa1 (+ i (- 1)))) (fref cc (+ i (- 1)) k 2))
      ))
      (fset (fref ch i 1 k) (+ (fref cc i k 1) ti2))
      (fset (fref ch ic 2 k) (+ ti2 (- (fref cc i k 1))))
      (fset (fref ch (+ i (- 1)) 1 k) (+ (fref cc (+ i (- 1)) k 1) tr2))
      (fset (fref ch (+ ic (- 1)) 2 k) (+ (fref cc (+ i (- 1)) k 1) (- tr2)))
  ))))
  label111 (if (= (mod ido 2) 1) (go end_label)) label105
  (fdo ((k 1 (+ k 1))) ((> k l1) nil)
   (tagbody (fset (fref ch 1 2 k) (- (fref cc ido k 2)))
    (fset (fref ch ido 1 k) (fref cc ido k 1))
  ))
  label107 (go end_label) end_label (return (values ido l1 cc ch wa1))
))

