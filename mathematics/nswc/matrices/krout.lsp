(defun krout (mo n m a ka b kb ierr index temp) (declare (type fixnum mo))
 (declare (type fixnum n)) (declare (type fixnum m))
 (declare (type (simple-array double-float (* *)) a))
 (declare (type fixnum ka)) (declare (type (simple-array double-float (*)) b))
 (declare (type fixnum kb)) (declare (type fixnum ierr))
 (declare (type (simple-array fixnum (*)) index))
 (declare (type (simple-array double-float (*)) temp))
 (prog
  ((dsum 0.0d0) (onej 0) (d 0.0d0) (nmj 0) (im1 0) (jp1 0) (nmk 0) (nj 0)
   (maxb 0) (km1 0) (lj 0) (kj 0) (j 0) (t_ 0.0d0) (i 0) (l 0) (p 0.0d0)
   (kp1 0) (k 0) (nm1 0)
  )
  (declare (type double-float dsum)) (declare (type fixnum onej))
  (declare (type double-float d)) (declare (type fixnum nmj))
  (declare (type fixnum im1)) (declare (type fixnum jp1))
  (declare (type fixnum nmk)) (declare (type fixnum nj))
  (declare (type fixnum maxb)) (declare (type fixnum km1))
  (declare (type fixnum lj)) (declare (type fixnum kj))
  (declare (type fixnum j)) (declare (type double-float t_))
  (declare (type fixnum i)) (declare (type fixnum l))
  (declare (type double-float p)) (declare (type fixnum kp1))
  (declare (type fixnum k)) (declare (type fixnum nm1))
  (if (or (< n 1) (< ka n)) (go label320)) (if (<= m 0) (go label5))
  (if (< kb n) (go label320)) label5 (setf ierr 0) (if (< n 2) (go label200))
  (setf nm1 (+ n (- 1)))
  (fdo ((k 1 (+ k 1))) ((> k nm1) nil)
   (tagbody (setf kp1 (+ k 1)) (setf p (abs (fref a k k))) (setf l k)
    (fdo ((i kp1 (+ i 1))) ((> i n) nil)
     (tagbody (setf t_ (abs (fref a i k))) (if (>= p t_) (go label10))
      (setf p t_) (setf l i) label10
    ))
    (if (= p 0.0) (go label300)) (setf p (fref a l k))
    (if (= mo 0) (fset (index k) l)) (if (= k l) (go label40))
    (fdo ((j 1 (+ j 1))) ((> j n) nil)
     (tagbody (setf t_ (fref a k j)) (fset (fref a k j) (fref a l j))
      (fset (fref a l j) t_)
    ))
    (if (<= m 0) (go label40)) (setf kj k) (setf lj l)
    (fdo ((j 1 (+ j 1))) ((> j m) nil)
     (tagbody (setf t_ (fref b kj)) (fset (fref b kj) (fref b lj))
      (fset (fref b lj) t_) (setf kj (+ kj kb)) (setf lj (+ lj kb))
    ))
    label40 (if (> k 1) (go label50))
    (fdo ((j kp1 (+ j 1))) ((> j n) nil)
     (tagbody (fset (fref a k j) (/ (fref a k j) p)))
    )
    (go label60) label50
    (fdo ((j kp1 (+ j 1))) ((> j n) nil)
     (tagbody (setf dsum (fref a k j))
      (fdo ((l 1 (+ l 1))) ((> l km1) nil)
       (tagbody
        (setf dsum (+ dsum (* (* -1 (dble (fref a k l))) (dble (fref a l j)))))
      ))
      (fset (fref a k j) (/ (sngl dsum) p))
    ))
    label60
    (fdo ((i kp1 (+ i 1))) ((> i n) nil)
     (tagbody (setf dsum (fref a i kp1))
      (fdo ((l 1 (+ l 1))) ((> l k) nil)
       (tagbody
        (setf dsum
         (+ dsum (* (* -1 (dble (fref a i l))) (dble (fref a l kp1))))
      )))
      (fset (fref a i kp1) dsum)
    ))
    (setf km1 k)
  ))
  (if (= (fref a n n) 0.0) (go label310)) (if (<= m 0) (go label120))
  (setf maxb (* kb m))
  (fdo ((onej 1 (+ onej kb))) ((> onej maxb) nil)
   (tagbody (setf kj onej) (fset (fref b kj) (/ (fref b kj) (fref a 1 1)))
    (fdo ((k 2 (+ k 1))) ((> k n) nil)
     (tagbody (setf kj (+ kj 1)) (setf dsum (fref b kj)) (setf km1 (+ k (- 1)))
      (setf lj onej)
      (fdo ((l 1 (+ l 1))) ((> l km1) nil)
       (tagbody
        (setf dsum (+ dsum (* (* -1 (dble (fref a k l))) (dble (fref b lj)))))
        (setf lj (+ lj 1))
      ))
      (fset (fref b kj) (/ (sngl dsum) (fref a k k)))
  ))))
  (fdo ((nj n (+ nj kb))) ((> nj maxb) nil)
   (tagbody (setf kj nj)
    (fdo ((nmk 1 (+ nmk 1))) ((> nmk nm1) nil)
     (tagbody (setf k (+ n (- nmk))) (setf lj kj) (setf kj (+ kj (- 1)))
      (setf dsum (fref b kj)) (setf kp1 (+ k 1))
      (fdo ((l kp1 (+ l 1))) ((> l n) nil)
       (tagbody
        (setf dsum (+ dsum (* (* -1 (dble (fref a k l))) (dble (fref b lj)))))
        (setf lj (+ lj 1))
      ))
      (fset (fref b kj) dsum)
  ))))
  label120 (if (/= mo 0) (go end_label))
  (fdo ((j 1 (+ j 1))) ((> j nm1) nil)
   (tagbody (fset (fref a j j) (/ 1.0 (fref a j j))) (setf jp1 (+ j 1))
    (fdo ((i jp1 (+ i 1))) ((> i n) nil)
     (tagbody (setf dsum 0.0d0) (setf im1 (+ i (- 1)))
      (fdo ((l j (+ l 1))) ((> l im1) nil)
       (tagbody
        (setf dsum (+ dsum (* (dble (fref a i l)) (dble (fref a l j)))))
      ))
      (fset (fref a i j) (/ (* -1 (sngl dsum)) (fref a i i)))
  ))))
  (fset (fref a n n) (/ 1.0 (fref a n n)))
  (fdo ((nmk 1 (+ nmk 1))) ((> nmk nm1) nil)
   (tagbody (setf k (+ n (- nmk))) (setf kp1 (+ k 1))
    (fdo ((j kp1 (+ j 1))) ((> j n) nil)
     (tagbody (fset (fref temp j) (fref a k j)) (fset (fref a k j) 0.0))
    )
    (fdo ((j 1 (+ j 1))) ((> j n) nil)
     (tagbody (setf dsum (fref a k j))
      (fdo ((l kp1 (+ l 1))) ((> l n) nil)
       (tagbody
        (setf dsum (+ dsum (* (* -1 (dble (fref temp l))) (dble (fref a l j))))
      )))
      (fset (fref a k j) dsum)
  ))))
  (fdo ((nmj 1 (+ nmj 1))) ((> nmj nm1) nil)
   (tagbody (setf j (+ n (- nmj))) (setf k (index j))
    (if (= j k) (go label161))
    (fdo ((i 1 (+ i 1))) ((> i n) nil)
     (tagbody (setf t_ (fref a i j)) (fset (fref a i j) (fref a i k))
      (fset (fref a i k) t_)
    ))
    label161
  ))
  (go end_label) label200 (setf d (fref a 1 1)) (if (= d 0.0) (go label310))
  (if (= mo 0) (fset (fref a 1 1) (/ 1.0 d))) (if (<= m 0) (go end_label))
  (setf maxb (* kb m))
  (fdo ((kj 1 (+ kj kb))) ((> kj maxb) nil)
   (tagbody (fset (fref b kj) (/ (fref b kj) d)))
  )
  (go end_label) label300 (setf ierr k) (go end_label) label310 (setf ierr n)
  (go end_label) label320 (setf ierr (- 1)) (go end_label) end_label
  (return (values mo n m a ka b kb ierr index temp))
))

